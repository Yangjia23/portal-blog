import{o as l,c as n,a as t,b as u}from"./app.5c37ca96.js";const e='{"title":"一、完成使命的 HTTP/1","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、完成使命的 HTTP/1","slug":"一、完成使命的-http-1"},{"level":3,"title":"1.1、超文本传输协议 HTTP/0.9","slug":"_1-1、超文本传输协议-http-0-9"},{"level":3,"title":"1.2、被浏览器推动的 HTTP/1.0","slug":"_1-2、被浏览器推动的-http-1-0"},{"level":3,"title":"1.3、缝缝补补的 HTTP/1.1","slug":"_1-3、缝缝补补的-http-1-1"},{"level":2,"title":"二、目前流行的 HTTP/2","slug":"二、目前流行的-http-2"},{"level":3,"title":"2.1、HTTP/1.1 的主要问题","slug":"_2-1、http-1-1-的主要问题"},{"level":3,"title":"2.2、HTTP/2 新特性","slug":"_2-2、http-2-新特性"},{"level":2,"title":"三、未来版本的 HTTP/3","slug":"三、未来版本的-http-3"},{"level":3,"title":"3.1、HTTP/2 的缺陷","slug":"_3-1、http-2-的缺陷"},{"level":3,"title":"3.2、HTTP/3 新特性","slug":"_3-2、http-3-新特性"}],"relativePath":"frontend-graph/浏览器/6、浏览器中的网络.md","lastUpdated":1633761850032}',a={},r=[t("p",null,"浏览器中的网络，主要介绍的 HTTP 协议，它是浏览器和服务器之间的通信语言，接下来从浏览器发展的视角介绍 HTTP 演进",-1),t("h2",{id:"一、完成使命的-http-1"},[t("a",{class:"header-anchor",href:"#一、完成使命的-http-1","aria-hidden":"true"},"#"),u(" 一、完成使命的 HTTP/1")],-1),t("h3",{id:"_1-1、超文本传输协议-http-0-9"},[t("a",{class:"header-anchor",href:"#_1-1、超文本传输协议-http-0-9","aria-hidden":"true"},"#"),u(" 1.1、超文本传输协议 HTTP/0.9")],-1),t("p",null,[u("HTTP/0.9 在 1991 年提出，最开始的需求是为了学术交流，在网络之间传输 HTML 超文本内容即可，所以被称为 "),t("strong",null,"超文本传输协议"),u("，有以下几个特点")],-1),t("ul",null,[t("li",null,[u("只有一个请求行，并没有 "),t("strong",null,"HTTP 请求头和请求体"),u(";")]),t("li",null,"服务器也没有返回头信息，仅返回数据"),t("li",null,[u("因为文件都是 HTML 格式, 返回的文件内容是以 "),t("strong",null,"ASCII 字符流"),u(" 来传输的")])],-1),t("h3",{id:"_1-2、被浏览器推动的-http-1-0"},[t("a",{class:"header-anchor",href:"#_1-2、被浏览器推动的-http-1-0","aria-hidden":"true"},"#"),u(" 1.2、被浏览器推动的 HTTP/1.0")],-1),t("p",null,[u("网景公司在 1994 年推出的浏览器，让网络不再局限在学术交流方面，而是带来了更新的需求，浏览器中展示的不止 HTML，还包括 JS，CSS,图片，视频等不同类型的文件，因此 HTTP/1.0 首先需要解决的是"),t("strong",null,"不同类型文件的下载"),u("，同时文件格式不能局限于 "),t("strong",null,"ASCII 编码")],-1),t("p",null,[u("HTTP/1.0 中引入了"),t("strong",null,"请求头"),u("和"),t("strong",null,"响应头"),u("，来支持下载不同类型的数据")],-1),t("ul",null,[t("li",null,[t("p",null,"发起请求时"),t("p",null,[u("浏览器通过 HTTP 请求头告诉服务器它期待服务器返回"),t("strong",null,"什么类型的文件"),u("、采取"),t("strong",null,"什么形式的压缩"),u("、提供"),t("strong",null,"什么语言的文件"),u("以及"),t("strong",null,"文件的具体编码")]),t("div",{class:"language-"},[t("pre",null,[t("code",null,"accept: text/html\naccept-encoding: gzip, deflate, br\naccept-Charset: ISO-8859-1,utf-8\naccept-language: zh-CN,zh\n")])])]),t("li",null,[t("p",null,"响应请求时"),t("p",null,"服务器会通过 HTTP 响应头告诉浏览器返回的数据类型、编码类型已经压缩方式等"),t("div",{class:"language-"},[t("pre",null,[t("code",null,"content-encoding: br\ncontent-type: text/html; charset=UTF-8\n")])])])],-1),t("p",null,"请求/响应头除了支持下载不同类型的数据，还新增了其他新特性",-1),t("ul",null,[t("li",null,"引入状态码"),t("li",null,[u("提供了 "),t("strong",null,"Cache 机制"),u("，减少服务器压力")]),t("li",null,[u("请求头中还加入了"),t("strong",null,"用户代理"),u("的字段，帮助服务器统计客户端的基础信息")])],-1),t("h3",{id:"_1-3、缝缝补补的-http-1-1"},[t("a",{class:"header-anchor",href:"#_1-3、缝缝补补的-http-1-1","aria-hidden":"true"},"#"),u(" 1.3、缝缝补补的 HTTP/1.1")],-1),t("p",null,"HTTP/1.1 是在 HTTP/1.0 的主要问题上进行了改进，包括以下几点",-1),t("h4",{id:"_1-3-1、改进持续连接"},[t("a",{class:"header-anchor",href:"#_1-3-1、改进持续连接","aria-hidden":"true"},"#"),u(" 1.3.1、改进持续连接")],-1),t("ul",null,[t("li",null,[t("p",null,"HTTP/1.0 的缺陷"),t("p",null,[u("每个请求都要经历 "),t("strong",null,"建立 TCP 连接、传输数据、断开 TCP 连接"),u(" 3 个阶段")])]),t("li",null,[t("p",null,"改进"),t("p",null,[u("HTTP/1.1 增加持久连接的方法，在一个 TCP 连接上可以传输多个 HTTP 请求，默认开启，请求头为 "),t("code",null,"Connection:keep-alive"),u("。")]),t("p",null,"其优势在于有效减少 TCP 建立连接和断开连接的次数，减少了服务器额外的负担"),t("p",null,"目前浏览器中对于同一个域名，默认允许同时建立 6 个 TCP 持久连接")])],-1),t("h4",{id:"_1-3-2、不成熟的-http-管道化"},[t("a",{class:"header-anchor",href:"#_1-3-2、不成熟的-http-管道化","aria-hidden":"true"},"#"),u(" 1.3.2、不成熟的 HTTP 管道化")],-1),t("ul",null,[t("li",null,[t("p",null,"出现的原因"),t("p",null,[u("持久连接虽然减少 TCP 连接，断开次数，但它需要"),t("strong",null,"等到前面的请求返回之后，才能进行下一次请求"),u("；如果  TCP  通道中的某个请求因为某些原因没有及时返回，那么就会阻塞后面的所有请求，这就是 "),t("strong",null,"队头阻塞"),u(" 的问题")])]),t("li",null,[t("p",null,"改进"),t("p",null,[u("HTTP 管道化就是为了解决 "),t("strong",null,"队头阻塞"),u(" 的问题, 通过管道化技术将多个 HTTP 请求整批发送到服务端，服务端根据请求顺序返回响应数据")])]),t("li",null,[t("p",null,"缺陷"),t("p",null,"例如：按照 A,B,C 顺序发起请求，服务端处理请求 A, B 需要 2s, 处理 C 只需 10s，A, B 不能立即返回，必要等到 C 处理结束，按照 A, B, C 的顺序返回"),t("p",null,"由于各种原因，FireFox、Chrome 等浏览器最终都放弃了管线化技术。")])],-1),t("h4",{id:"_1-3-3、提供虚拟主机的支持"},[t("a",{class:"header-anchor",href:"#_1-3-3、提供虚拟主机的支持","aria-hidden":"true"},"#"),u(" 1.3.3、提供虚拟主机的支持")],-1),t("ul",null,[t("li",null,[t("p",null,"HTTP/1.0 的缺陷 在 HTTP/1.0 中，每个域名绑定了一个唯一的 IP 地址，因此一个服务器只能支持一个域名。")]),t("li",null,[t("p",null,"改进"),t("p",null,"虚拟主机技术实现在一台物理主机上绑定多个虚拟主机，每个虚拟主机都有自己的单独的域名，这些单独的域名都公用同一个  IP  地址"),t("p",null,[u("HTTP/1.1  的请求头中增加了  "),t("strong",null,"Host"),u("  字段，用来表示当前的域名地址")])])],-1),t("h4",{id:"_1-3-4、客户端-cookie-、安全机制"},[t("a",{class:"header-anchor",href:"#_1-3-4、客户端-cookie-、安全机制","aria-hidden":"true"},"#"),u(" 1.3.4、客户端 Cookie 、安全机制")],-1),t("h2",{id:"二、目前流行的-http-2"},[t("a",{class:"header-anchor",href:"#二、目前流行的-http-2","aria-hidden":"true"},"#"),u(" 二、目前流行的 HTTP/2")],-1),t("h3",{id:"_2-1、http-1-1-的主要问题"},[t("a",{class:"header-anchor",href:"#_2-1、http-1-1-的主要问题","aria-hidden":"true"},"#"),u(" 2.1、HTTP/1.1 的主要问题")],-1),t("h4",{id:"_2-1-1、对带宽的利用率不理想"},[t("a",{class:"header-anchor",href:"#_2-1-1、对带宽的利用率不理想","aria-hidden":"true"},"#"),u(" 2.1.1、对带宽的利用率不理想")],-1),t("ul",null,[t("li",null,[t("p",null,"TCP 启动慢"),t("p",null,[u("TCP 为了减少网络拥塞，TCP 发送数据的过程从最开始很慢的速度慢慢达到一个理想速度，这就是 "),t("strong",null,"TCP 慢启动"),u("，类似于汽车起步")])]),t("li",null,[t("p",null,"多条 TCP 会竞争固定带宽"),t("p",null,[u("多个 TCP 连接时，当出现带宽不足，每个 TCP 连接都需要放缓接受数据的速度，但 TCP 连接之间"),t("strong",null,"不能协商让哪些关键资源优先下载")])]),t("li",null,[t("p",null,"队头阻塞"),t("p",null,"HTTP 管道化并没有有效解决 队头阻塞 的问题")])],-1),t("h3",{id:"_2-2、http-2-新特性"},[t("a",{class:"header-anchor",href:"#_2-2、http-2-新特性","aria-hidden":"true"},"#"),u(" 2.2、HTTP/2 新特性")],-1),t("p",null,"针对 HTTP 1.1 的缺陷，HTTP2.0 有以下改进：",-1),t("ul",null,[t("li",null,[t("strong",null,"一个域名只使用一个 TCP 长连接来传输数据"),u("，减少 TCP 启动慢已经 TCP 连接之间的竞争")]),t("li",null,"资源的并行请求，不需要等待其它请求完成")],-1),t("p",null,[u("HTTP2.0 的改进都是引入 "),t("strong",null,"二进制分帧层"),u(" 的基础上，利用 "),t("strong",null,"多路复用机制"),u(" 来实现的")],-1),t("p",null,[t("img",{src:"/portal-blog/images/browser/http2-duolufuyong.png",alt:"http-cache"})],-1),t("p",null,"具体数据链路如下：",-1),t("ul",null,[t("li",null,[u("请求数据通过 二进制分帧层处理后，会被转换成一个个带有"),t("strong",null,"请求 ID 编号的帧")]),t("li",null,"服务器接收到所有的帧后，会将相同 ID 的帧合并成一个完整的请求信息"),t("li",null,"同时，二进制分帧层会将所有的响应数据转换成一个个带有请求 ID 编号的帧"),t("li",null,"浏览器接收到响应帧后，会根据 ID 编号将帧的数据提交跟对应的请求")],-1),t("p",null,[u("在 "),t("strong",null,"二进制分帧层"),u(" 的基础上，HTTP 2.0 还支持以下新特性")],-1),t("ul",null,[t("li",null,"设置请求的优先级"),t("li",null,"服务器推送"),t("li",null,"头部压缩")],-1),t("h2",{id:"三、未来版本的-http-3"},[t("a",{class:"header-anchor",href:"#三、未来版本的-http-3","aria-hidden":"true"},"#"),u(" 三、未来版本的 HTTP/3")],-1),t("h3",{id:"_3-1、http-2-的缺陷"},[t("a",{class:"header-anchor",href:"#_3-1、http-2-的缺陷","aria-hidden":"true"},"#"),u(" 3.1、HTTP/2 的缺陷")],-1),t("p",null,"HTTP/2 解决了应用层面的队头阻塞问题, 但依然是基于 TCP 协议的，而 TCP 协议存在以下问题",-1),t("h4",{id:"_3-1-1、tcp-的队头阻塞"},[t("a",{class:"header-anchor",href:"#_3-1-1、tcp-的队头阻塞","aria-hidden":"true"},"#"),u(" 3.1.1、TCP 的队头阻塞")],-1),t("p",null,[t("strong",null,"TCP 队头阻塞"),u("：数据传输过程中，某个数据包丢包会导致整个 TCP 连接处于暂停状态，需要等待丢包的数据被重新传输过来")],-1),t("ul",null,[t("li",null,[t("p",null,"HTTP/1.1: 一个域名建立 6 个 TCP 连接，一个 TCP 连接发生阻塞，不影响其它 5 个 TCP 连接")]),t("li",null,[t("p",null,"HTTP/2 : 每个域名只有一个 TCP 长连接，多个请求都在同一个 TCP 管道中，某个数据丢包了，会影响该管道中所有的请求")])],-1),t("p",null,"有测试数据表明, 当系统丢包率达到 2%时，HTTP1.1 的传输效率反而比 HTTP 2 表现的更好",-1),t("h4",{id:"_3-1-2、tcp-建立连接的延时"},[t("a",{class:"header-anchor",href:"#_3-1-2、tcp-建立连接的延时","aria-hidden":"true"},"#"),u(" 3.1.2、TCP 建立连接的延时")],-1),t("h4",{id:"_3-1-3、tcp-协议僵化"},[t("a",{class:"header-anchor",href:"#_3-1-3、tcp-协议僵化","aria-hidden":"true"},"#"),u(" 3.1.3、TCP 协议僵化")],-1),t("p",null,"中间设备的老旧，操作系统的版本更新滞后",-1),t("h3",{id:"_3-2、http-3-新特性"},[t("a",{class:"header-anchor",href:"#_3-2、http-3-新特性","aria-hidden":"true"},"#"),u(" 3.2、HTTP/3 新特性")],-1),t("p",null,[u("HTTP/3 选择了一个折衷的方法——UDP 协议，基于 UDP 实现了类似于 TCP 的多路数据流、传输可靠性等功能，称为 "),t("strong",null,"QUIC 协议")],-1),t("p",null,[t("img",{src:"/portal-blog/images/browser/http3-quic.png",alt:"http-cache"})],-1),t("p",null,"QUIC 协议集合了以下几点功能",-1),t("ul",null,[t("li",null,[t("p",null,"实现了类似 TCP 的流量控制、传输可靠性的功能")]),t("li",null,[t("p",null,"集成了 TLS 加密功能")]),t("li",null,[t("p",null,"实现了 HTTP/2 中的多路复用功能")])],-1)];a.render=function(t,u,e,a,T,h){return l(),n("div",null,r)};export{e as __pageData,a as default};
