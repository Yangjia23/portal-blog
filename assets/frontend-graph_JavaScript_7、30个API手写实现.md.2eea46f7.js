import{_ as n,c as s,o as a,a as t}from"./app.bfda52b1.js";const f='{"title":"getType","description":"","frontmatter":{},"headers":[{"level":3,"title":"getType","slug":"gettype"},{"level":3,"title":"instanceof","slug":"instanceof"},{"level":3,"title":"call","slug":"call"},{"level":3,"title":"apply","slug":"apply"},{"level":3,"title":"bind","slug":"bind"},{"level":3,"title":"new","slug":"new"},{"level":3,"title":"\u6570\u7EC4\u76F8\u5173","slug":"\u6570\u7EC4\u76F8\u5173"},{"level":3,"title":"debounce \u9632\u6296","slug":"debounce-\u9632\u6296"},{"level":3,"title":"throttle \u8282\u6D41","slug":"throttle-\u8282\u6D41"},{"level":3,"title":"deepClone","slug":"deepclone"},{"level":3,"title":"Object.is","slug":"object-is"},{"level":3,"title":"\u6D45\u62F7\u8D1D Object.assign","slug":"\u6D45\u62F7\u8D1D-object-assign"},{"level":3,"title":"Object.create","slug":"object-create"},{"level":3,"title":"EventEmit \u53D1\u5E03\u8BA2\u9605","slug":"eventemit-\u53D1\u5E03\u8BA2\u9605"},{"level":3,"title":"\u89E3\u6790 URL","slug":"\u89E3\u6790-url"},{"level":3,"title":"JSONP","slug":"jsonp"},{"level":3,"title":"Ajax","slug":"ajax"},{"level":3,"title":"Promise","slug":"promise"}],"relativePath":"frontend-graph/JavaScript/7\u300130\u4E2AAPI\u624B\u5199\u5B9E\u73B0.md"}',p={},o=t(`<h3 id="gettype" tabindex="-1">getType <a class="header-anchor" href="#gettype" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object Type]</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// String</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Array</span>
</code></pre></div><h3 id="instanceof" tabindex="-1">instanceof <a class="header-anchor" href="#instanceof" aria-hidden="true">#</a></h3><blockquote><p><code>A instanceof B</code>: \u5224\u65AD<strong>\u5BF9\u8C61 A</strong>\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u5B58\u5728<strong>\u6784\u9020\u51FD\u6570 B</strong>\u7684\u539F\u578B\u5BF9\u8C61</p></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">R</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token constant">L</span> <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">L</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">R</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token constant">L</span> <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> String<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">myInstanceof</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Object<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="call" tabindex="-1">call <a class="header-anchor" href="#call" aria-hidden="true">#</a></h3><blockquote><p><code>fn.call(target, args1, args2...)</code></p></blockquote><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>myCall \u65B9\u6CD5\u9700\u7ED1\u5B9A\u5230 <code>Function.prototype</code> \u539F\u578B\u4E0A</li><li>\u5C06 fn \u4F5C\u4E3A target \u7684\u4E34\u65F6\u5C5E\u6027\u53BB\u6267\u884C\uFF0C\u6267\u884C\u540E\u5220\u9664\u8BE5\u5C5E\u6027,\u8FD4\u56DE\u6267\u884C\u7ED3\u679C</li></ul><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">myCall</span><span class="token punctuation">(</span><span class="token parameter">context <span class="token operator">=</span> window<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span> <span class="token comment">// \u907F\u514D Function.prototype.myCall() \u76F4\u63A5\u8C03\u7528</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre></div><h3 id="apply" tabindex="-1">apply <a class="header-anchor" href="#apply" aria-hidden="true">#</a></h3><blockquote><p><code>fn.apply(target, [args1, args2...])</code> \u4E3B\u8981\u601D\u8DEF\uFF1A</p></blockquote><ul><li>\u540C call \u533A\u522B\u5728\u4E8E\u4F20\u53C2</li></ul><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">myApply</span><span class="token punctuation">(</span><span class="token parameter">context <span class="token operator">=</span> window<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span> <span class="token comment">// \u907F\u514D Function.prototype.myCall() \u76F4\u63A5\u8C03\u7528</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">?</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">:</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre></div><h3 id="bind" tabindex="-1">bind <a class="header-anchor" href="#bind" aria-hidden="true">#</a></h3><blockquote><p><code>let newFn = fn.bind(obj, arg1, arg2...)</code></p></blockquote><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>\u5224\u65AD\u51FD\u6570\u662F\u5426\u6B63\u5E38\u8C03\u7528</li><li>\u67EF\u7406\u5316\u7684\u5B9E\u73B0\uFF0C\u5185\u5916\u53C2\u6570\u7684\u5408\u5E76</li><li>\u517C\u5BB9\u6784\u9020\u51FD\u6570\uFF0C\u5F53 bind \u8FD4\u56DE\u7684\u51FD\u6570\u88AB\u5F53\u4F5C\u6784\u9020\u51FD\u6570\u642D\u914D <code>new</code> \u5173\u952E\u5B57\u4F7F\u7528, \u624B\u52A8\u7ED1\u5E26\u7684 <code>this</code> \u4F1A\u88AB\u5FFD\u7565</li></ul><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">myBind</span><span class="token punctuation">(</span><span class="token parameter">context <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Function.prototype.bind called error&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> outArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype
  <span class="token keyword">const</span> <span class="token function-variable function">bound</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> innerArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
    <span class="token keyword">const</span> args <span class="token operator">=</span> outArgs<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>innerArgs<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">F</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  bound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> bound
<span class="token punctuation">}</span>
</code></pre></div><h3 id="new" tabindex="-1">new <a class="header-anchor" href="#new" aria-hidden="true">#</a></h3><p>\u4E3B\u8981\u601D\u8DEF</p><ul><li><ol><li>\u521B\u5EFA\u7A7A\u5BF9\u8C61\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5B9E\u4F8B</li></ol></li><li><ol start="2"><li>\u7ED1\u5B9A\u7A7A\u5BF9\u8C61\u539F\u578B</li></ol></li><li><ol start="3"><li>\u6267\u884C\u6784\u9020\u51FD\u6570\uFF0C\u6307\u5B9A this \u4E3A\u7A7A\u5BF9\u8C61\uFF0C\u4FDD\u5B58\u8FD4\u56DE\u7ED3\u679C</li></ol></li><li><ol start="4"><li>\u5224\u65AD\u8FD4\u56DE\u7ED3\u679C\u7C7B\u578B\u662F\u5426\u4E3A\u5BF9\u8C61</li></ol></li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">newFun</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> constructor <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> result <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6570\u7EC4\u76F8\u5173" tabindex="-1">\u6570\u7EC4\u76F8\u5173 <a class="header-anchor" href="#\u6570\u7EC4\u76F8\u5173" aria-hidden="true">#</a></h3><ul><li>map</li></ul><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myMap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">executerFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;the caller must be array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">executerFn</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><p>reduce</p></li><li><p>flat</p></li></ul><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myFlat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">deep <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;the caller must be Array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>deep <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span> <span class="token operator">?</span> cur<span class="token punctuation">.</span><span class="token function">myFlat</span><span class="token punctuation">(</span>deep <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">myFlat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 1, 2, 3, 4, [ 5, 6 ] ]</span>
</code></pre></div><ul><li>\u53BB\u91CD</li></ul><p><strong>filter + indexOf</strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">===</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>set</strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="debounce-\u9632\u6296" tabindex="-1">debounce \u9632\u6296 <a class="header-anchor" href="#debounce-\u9632\u6296" aria-hidden="true">#</a></h3><blockquote><p><code>debounce(fn, time)</code>: \u89E6\u53D1\u4E8B\u4EF6 n \u79D2\u4E4B\u5185\u4E0D\u518D\u89E6\u53D1\u65B0\u4E8B\u4EF6\uFF0C\u624D\u4F1A\u53BB\u6267\u884C fn</p></blockquote><p>\u5E94\u7528\u573A\u666F\uFF1A</p><ul><li>\u641C\u7D22\u6846\uFF0C\u8F93\u5165\u540E\u7B49\u5F85 1000ms \u540E\u624D\u53BB\u641C\u7D22</li><li>\u7A97\u53E3\u53D8\u5316\uFF0C1000ms \u540E\u518D\u53BB\u8C03\u6574\u6837\u5F0F</li></ul><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>\u8FD4\u56DE\u4E00\u4E2A\u95ED\u5305\uFF0C</li><li>\u6DFB\u52A0\u4E00\u4E2A\u6807\u8BC6\uFF0C\u5224\u65AD fn \u662F\u5426\u9700\u8981\u7ACB\u5373\u6267\u884C</li></ul><div class="language-js"><pre><code><span class="token keyword">let</span> timer<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time<span class="token punctuation">,</span> flag <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7ACB\u5373\u6267\u884C\u4E00\u6B21</span>
    <span class="token punctuation">}</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      timer <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token operator">!</span>flag <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="throttle-\u8282\u6D41" tabindex="-1">throttle \u8282\u6D41 <a class="header-anchor" href="#throttle-\u8282\u6D41" aria-hidden="true">#</a></h3><blockquote><p><code>throttle(fn, time)</code>: \u65E0\u8BBA\u4E8B\u4EF6\u7684\u6267\u884C\u9891\u6B21\uFF0Cfn \u603B\u662F\u5728\u5355\u4F4D\u65F6\u95F4\u5185\u6267\u884C</p></blockquote><p>\u53EF\u4EE5\u60F3\u8C61\u6210\uFF1A\u65E0\u8BBA\u65E9\u9AD8\u5CF0\u8FD8\u662F\u665A\u9AD8\u5CF0\uFF0C\u516C\u4EA4\u8F66\u90FD\u662F\u56FA\u5B9A\u73ED\u6B21\u51FA\u53D1\u7684</p><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>\u8FD4\u56DE\u4E00\u4E2A\u95ED\u5305</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="deepclone" tabindex="-1">deepClone <a class="header-anchor" href="#deepclone" aria-hidden="true">#</a></h3><p><strong>\u5E38\u89C1\u7684\u6DF1\u62F7\u8D1D</strong></p><div class="language-js"><pre><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u9677\uFF1A<code>JSON</code> \u7684\u9650\u5236</p><ul><li>\u4F1A\u81EA\u52A8\u5FFD\u7565\u503C\u4E3A <code>undefined</code>, <code>Symbol</code>, <code>function</code> \u7684\u5C5E\u6027</li><li><code>Date</code> \u65E5\u671F\u4F1A\u81EA\u52A8\u8F6C\u5316\u6210\u5B57\u7B26\u4E32</li><li><code>RegExp</code> \u6B63\u5219\u81EA\u52A8\u8F6C\u6210\u7A7A\u5BF9\u8C61 <code>{}</code></li><li><code>NaN</code>, <code>Infinity</code> \u4F1A\u88AB\u5F53\u521D <code>null</code> \u5904\u7406</li></ul><p><strong>\u9012\u5F52\u7248</strong></p><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>1\u3001\u666E\u901A\u6570\u636E\u7C7B\u578B, null \u7B49\u76F4\u63A5\u8FD4\u56DE</li><li>2\u3001<code>Date</code>, <code>RegExp</code> \u7B49\u76F4\u63A5\u8FD4\u56DE\u65B0\u5B9E\u4F8B</li><li>3\u3001\u4F7F\u7528 <code>WeakMap</code> \u89E3\u51B3\u5BF9\u8C61\u81EA\u8EAB\u5D4C\u5957\u5F15\u7528\u7684\u95EE\u9898 <blockquote><p>ps: \u5F53\u4F7F\u7528 <code>WeakMap</code> \u65F6\uFF0C<code>hash</code> \u4E0E <code>obj</code> \u4E4B\u95F4\u5C31\u662F\u5F31\u5F15\u7528\u5173\u7CFB\uFF0C\u4E0D\u5F71\u54CD\u5783\u573E\u56DE\u6536\u673A\u5236\u7684\u6267\u884C</p></blockquote></li><li>4\u3001\u6027\u80FD\u4F18\u5316\uFF0C\u5F53\u6570\u636E\u91CF\u5927\u65F6 <code>for...in...</code>\u5FAA\u73AF\u6548\u7387\u4F4E\uFF0C\u53EF\u66FF\u6362\u6210 <code>for</code>, <code>while</code>\u5FAA\u73AF\u7B49</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u57FA\u672C\u7C7B\u578B\uFF0Cnull \u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token comment">// \u65E5\u671F\uFF0C\u6B63\u5219</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u89E3\u51B3\u5D4C\u5957\u5FAA\u73AF</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">obj<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// for...in... \u6548\u7387\u4F4E</span>
  <span class="token comment">// for(let key in obj){</span>
  <span class="token comment">//   if(obj.hasOwnProperty(key)){</span>
  <span class="token comment">//     target[key] = deepClone(obj[key])</span>
  <span class="token comment">//   }</span>
  <span class="token comment">// }</span>
  <span class="token keyword">const</span> isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> isArray <span class="token operator">?</span> obj <span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> isArray <span class="token operator">?</span> i <span class="token operator">:</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;1996/01/01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">NaN</span><span class="token punctuation">,</span>
  <span class="token function-variable function">e</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">f</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(0-9)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">i</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="object-is" tabindex="-1"><a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a> <a class="header-anchor" href="#object-is" aria-hidden="true">#</a></h3><blockquote><p><code>Object.is(value1, value2)</code>: \u5224\u65AD\u662F\u5426\u662F\u540C\u4E00\u4E2A\u503C</p></blockquote><p>\u4E3B\u8981\u601D\u8DEF\uFF1A</p><ul><li>\u9700\u8981\u533A\u5206\u4E0E <code>===</code> \u8FD0\u7B97\u7B26\u5728\u5904\u7406 <code>NaN</code> \u4E0E <code>+0\uFF0C-0</code> \u7B49\u503C\u533A\u522B\uFF1A</li></ul><div class="language-js"><pre><code>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">isSame</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9700\u8981\u533A\u5206 +0\uFF0C-0</span>
    <span class="token comment">// a !== 0, \u76F4\u63A5\u8FD4\u56DE true</span>
    <span class="token comment">// a === 0, \u5C31\u9700\u8981\u5224\u65AD  +0\uFF0C-0, \u4F7F\u7528 1/+0 === Infinity \u548C 1/-0 === -Infinity\u6765\u8FDB\u884C\u5224\u65AD</span>
    <span class="token keyword">return</span> a <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">/</span> a <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">/</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5F53 a,b \u90FD\u662F NaN \u7684\u65F6\u5019\u8FD4\u56DE true</span>
  <span class="token keyword">return</span> a <span class="token operator">!==</span> a <span class="token operator">&amp;&amp;</span> b <span class="token operator">!==</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isSame</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isSame</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="\u6D45\u62F7\u8D1D-object-assign" tabindex="-1">\u6D45\u62F7\u8D1D Object.assign <a class="header-anchor" href="#\u6D45\u62F7\u8D1D-object-assign" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>Object.assign(target, ...sources)</code>: \u4ECE\u4E00\u4E2A\u6216\u591A\u4E2A\u6E90\u5BF9\u8C61<code>sources</code>\u4E0A\u590D\u5236<strong>\u53EF\u679A\u4E3E\u5C5E\u6027</strong>\u7684\u503C\u5230\u76EE\u6807\u5BF9\u8C61<code>target</code></p></div><p>\u4E3B\u8981\u601D\u8DEF</p><ul><li>1\u3001\u5224\u65AD\u539F\u751F <code>Object</code> \u662F\u5426\u652F\u6301\u8BE5\u51FD\u6570, \u6CA1\u6709\u5C31\u4F7F\u7528 <code>Object.defineProperty</code> \u5C06\u8BE5\u51FD\u6570\u7ED1\u5B9A\u5230 <code>Object</code> \u4E0A</li><li>2\u3001\u6821\u9A8C\u53C2\u6570\uFF0C\u76EE\u6807\u5BF9\u8C61 target \u4E0D\u80FD\u4E3A null, undefined</li><li>3\u3001\u5F53\u76EE\u6807\u5BF9\u8C61 target \u4E3A\u57FA\u672C\u7C7B\u578B\uFF0C\u9700\u8981\u8F6C\u6362\u6210\u5BF9\u8C61</li><li>4\u3001\u4F7F\u7528 <code>for...in...</code> \u904D\u5386\u6E90\u5BF9\u8C61\u4E0A\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\u5230\u76EE\u6807\u5BF9\u8C61\u4E0A</li></ul><div class="language-js"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Object<span class="token punctuation">.</span>myAssign <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1\uFF0C\u9ED8\u8BA4 Object \u4E0A\u7684\u5C5E\u6027\u662F\u4E0D\u53EF\u679A\u4E3E\u7684\uFF0C\u76F4\u63A5\u5F80 Object \u4E0A\u6DFB\u52A0\u5C5E\u6027\u662F\u53EF\u679A\u4E3E\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u901A\u8FC7</span>
  <span class="token comment">// Object.defineProperty \u8FDB\u884C\u8BBE\u7F6E</span>
  <span class="token punctuation">(</span><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;myAssign&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">writeable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2</span>
        <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot convert undefined or null to object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> to <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> source <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6CA1\u76F4\u63A5\u8C03\u7528 source.hasOwnProperty \uFF0C\u662F\u56E0\u4E3A source \u5BF9\u8C61\u53EF\u80FD\u662F\u901A\u8FC7</span>
            <span class="token comment">// Object.create() \u521B\u9020\u7684\uFF0C\u539F\u578B\u6CA1\u5173\u8054\u5230 Object.prototype \u5BF9\u8C61\u4E0A\uFF0C\u4E0D\u5B58\u5728\u8BE5\u65B9\u6CD5</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              to<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> to<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="object-create" tabindex="-1">Object.create <a class="header-anchor" href="#object-create" aria-hidden="true">#</a></h3><h3 id="eventemit-\u53D1\u5E03\u8BA2\u9605" tabindex="-1">EventEmit \u53D1\u5E03\u8BA2\u9605 <a class="header-anchor" href="#eventemit-\u53D1\u5E03\u8BA2\u9605" aria-hidden="true">#</a></h3><p>\u4E3B\u8981\u601D\u8DEF</p><ul><li><code>EventEmit</code> \u4F5C\u4E3A\u4E00\u4E2A\u7C7B\uFF0C\u5176\u5B9E\u4F8B\u4E0A\u5B58\u5728 <code>on</code>,<code>off</code>,<code>emit</code> \u7B49\u65B9\u6CD5</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">EventEmit</span><span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> tasks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">const</span> idx <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">it</span> <span class="token operator">=&gt;</span> it <span class="token operator">===</span> fn<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tasks<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> once <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u521B\u5EFA\u526F\u672C\uFF0C\u5982\u679C\u56DE\u8C03\u51FD\u6570\u5185\u7EE7\u7EED\u6CE8\u518C\u76F8\u540C\u4E8B\u4EF6\uFF0C\u4F1A\u9020\u6210\u6B7B\u5FAA\u73AF</span>
      <span class="token keyword">let</span> tasks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fn <span class="token keyword">of</span> tasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>once<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u89E3\u6790-url" tabindex="-1">\u89E3\u6790 URL <a class="header-anchor" href="#\u89E3\u6790-url" aria-hidden="true">#</a></h3><h3 id="jsonp" tabindex="-1">JSONP <a class="header-anchor" href="#jsonp" aria-hidden="true">#</a></h3><p>\u4E3B\u8981\u601D\u8DEF</p><ul><li>\u5C01\u88C5 <code>jsonp</code> \u51FD\u6570\uFF0C\u4F20\u5165 <code>url</code>,<code>data</code>,<code>callback</code> \u7B49\u53C2\u6570</li><li>\u62FC\u63A5 <code>url</code>,</li><li>\u52A8\u6001\u521B\u5EFA <code>script</code> \u6807\u7B7E\u5E76\u63D2\u5165\u9875\u9762\u4E2D</li><li>\u6302\u8F7D\u56DE\u8C03\u51FD\u6570</li></ul><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">window<span class="token punctuation">,</span> document</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">jsonp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. \u62FC\u63A5url,\u5904\u7406 data</span>
    <span class="token keyword">let</span> dataString <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dataString <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 2.\u521B\u5EFA\u81EA\u5B9A\u4E49 cb</span>
    <span class="token keyword">const</span> cbFuncName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">json_cb_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    dataString <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cbFuncName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

    <span class="token comment">// 3.\u521B\u5EFA script \u6807\u7B7E</span>
    <span class="token keyword">const</span> scriptEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scriptEl<span class="token punctuation">.</span>src <span class="token operator">=</span> url <span class="token operator">+</span> dataString<span class="token punctuation">;</span>

    <span class="token comment">// 4.\u6302\u8F7D\u56DE\u8C03\u51FD\u6570</span>
    window<span class="token punctuation">[</span>cbFuncName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>scriptEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptEl<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span>$jsonp <span class="token operator">=</span> jsonp<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="ajax" tabindex="-1">Ajax <a class="header-anchor" href="#ajax" aria-hidden="true">#</a></h3><h3 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h3>`,79),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{f as __pageData,m as default};
