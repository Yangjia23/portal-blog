import{o as n,c as s,d as a}from"./app.f4d85410.js";const t='{"title":"一、初识 nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、初识 nginx","slug":"一、初识-nginx"},{"level":3,"title":"1.1、安装","slug":"_1-1、安装"},{"level":3,"title":"1.2 操作","slug":"_1-2-操作"},{"level":3,"title":"1.3、配置文件","slug":"_1-3、配置文件"}],"relativePath":"source-analysis/前端运维/4、nginx.md","lastUpdated":1625673383119}',e={},o=a('<p>学习掌握好 <code>nginx</code>,</p><h2 id="一、初识-nginx"><a class="header-anchor" href="#一、初识-nginx" aria-hidden="true">#</a> 一、初识 nginx</h2><h3 id="_1-1、安装"><a class="header-anchor" href="#_1-1、安装" aria-hidden="true">#</a> 1.1、安装</h3><p>以 centos 为例，通过 yum 进行安装</p><div class="language-shell"><pre><code><span class="token comment"># 安装nginx</span>\nyum <span class="token function">install</span> nginx -y\n<span class="token comment"># 查看安装的版本</span>\nnginx -v\n<span class="token comment"># 查看编译时的参数</span>\nnginx -V \n</code></pre></div><h3 id="_1-2-操作"><a class="header-anchor" href="#_1-2-操作" aria-hidden="true">#</a> 1.2 操作</h3><p><strong>命令</strong></p><div class="language-shell"><pre><code>systemctl <span class="token punctuation">[</span>option<span class="token punctuation">]</span> nginx.server\n</code></pre></div><p><strong>option</strong></p><ul><li><code>start</code>: 启动</li><li><code>stop</code>: 停止</li><li><code>status</code>: 状态</li><li><code>restart</code>: 重启</li><li><code>reload</code>: 重新读取配置</li></ul><h3 id="_1-3、配置文件"><a class="header-anchor" href="#_1-3、配置文件" aria-hidden="true">#</a> 1.3、配置文件</h3><p>上面安装的 nginx 版本为 <code>nginx/1.20.1</code>，以此为例，nginx 配置文件如下</p><ul><li><p><code>/etc/nginx/nginx.conf</code>: 主配置文件</p></li><li><p><code>/etc/nginx/conf.d/*.conf</code>: 包含<code>conf.d</code>目录下面的所有配置文件</p></li><li><p><code>/etc/nginx/default.d/*.conf</code>: 包含<code>default.d</code>目录下面的所有配置文件</p></li></ul><h4 id="_1-3-1、nginx配置语法"><a class="header-anchor" href="#_1-3-1、nginx配置语法" aria-hidden="true">#</a> 1.3.1、nginx配置语法</h4><p>主配置文件 <code>/etc/nginx/nginx.conf</code> 配置如下</p><div class="language-shell"><pre><code><span class="token comment"># 全局配置 </span>\nuser nginx<span class="token punctuation">;</span> <span class="token comment"># user: 设置nginx服务的系统使用用户</span>\nworker_processes auto<span class="token punctuation">;</span> <span class="token comment"># 工作进程数,一般和CPU数量相同</span>\nerror_log /var/log/nginx/error.log<span class="token punctuation">;</span> <span class="token comment"># nginx的错误日志</span>\npid /run/nginx.pid<span class="token punctuation">;</span> <span class="token comment"># nginx服务启动时的pid</span>\n\n<span class="token comment"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span>\ninclude /usr/share/nginx/modules/*.conf<span class="token punctuation">;</span>\n\n<span class="token comment"># 事件配置 </span>\nevents <span class="token punctuation">{</span>\n    worker_connections <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment"># 每个进程允许的最大连接数 </span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># http 配置</span>\nhttp <span class="token punctuation">{</span>\n\n    log_format  main  <span class="token string">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>\n                      <span class="token string">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>\n                      <span class="token string">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span><span class="token punctuation">;</span> <span class="token comment"># 日志记录格式</span>\n\n    access_log  /var/log/nginx/access.log  main<span class="token punctuation">;</span> <span class="token comment"># 默认访问日志</span>\n\n    sendfile            on<span class="token punctuation">;</span>  <span class="token comment"># 启动 sendfile</span>\n    tcp_nopush          on<span class="token punctuation">;</span>  <span class="token comment"># tcp_nopush: 懒发送</span>\n    tcp_nodelay         on<span class="token punctuation">;</span>  \n    keepalive_timeout   <span class="token number">65</span><span class="token punctuation">;</span>  <span class="token comment"># 超时时间</span>\n    types_hash_max_size <span class="token number">4096</span><span class="token punctuation">;</span> \n\n    include             /etc/nginx/mime.types<span class="token punctuation">;</span> <span class="token comment"># 文件后缀和类型类型的对应关系</span>\n    default_type        application/octet-stream<span class="token punctuation">;</span> <span class="token comment"># 默认content-type</span>\n\n    include /etc/nginx/conf.d/*.conf<span class="token punctuation">;</span> <span class="token comment"># 包含的子配置文件</span>\n\n    <span class="token comment"># server 配置</span>\n    server <span class="token punctuation">{</span>\n        listen       <span class="token number">80</span><span class="token punctuation">;</span> <span class="token comment"># 监听端口</span>\n        listen       <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80<span class="token punctuation">;</span> \n        server_name  _<span class="token punctuation">;</span> <span class="token comment"># 用域名方式访问的地址</span>\n        root         /usr/share/nginx/html<span class="token punctuation">;</span> <span class="token comment"># 静态文件根目录</span>\n\n        location / <span class="token punctuation">{</span>\n          root /usr/share/nginx/html<span class="token punctuation">;</span>\n          index index.html index.htm<span class="token punctuation">;</span> <span class="token comment"># 首页的索引文件</span>\n        <span class="token punctuation">}</span>\n\n        error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span> <span class="token comment"># 指定错误页面 🙅‍♂️</span>\n        location <span class="token operator">=</span> /404.html <span class="token punctuation">{</span>\n        <span class="token punctuation">}</span>\n\n        error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span> <span class="token comment"># 把后台错误重定向到静态的50x.html页面</span>\n        location <span class="token operator">=</span> /50x.html <span class="token punctuation">{</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',16);e.render=function(a,t,e,p,c,l){return n(),s("div",null,[o])};export default e;export{t as __pageData};
