import{o as e,c as i,d}from"./app.a1522aa7.js";const o='{"title":"1、盒模型","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、盒模型","slug":"_1、盒模型"},{"level":3,"title":"1.1、盒模型组成","slug":"_1-1、盒模型组成"},{"level":3,"title":"1.2、如何设置？","slug":"_1-2、如何设置？"},{"level":2,"title":"2、文档流","slug":"_2、文档流"},{"level":3,"title":"2.1 position","slug":"_2-1-position"}],"relativePath":"frontend-graph/CSS/1、页面布局原理.md","lastUpdated":1630310567752}',l={},t=[d('<p>关于页面布局原理需要了解到以下两个概念</p><ul><li>盒模型</li><li>文档流</li></ul><h2 id="_1、盒模型"><a class="header-anchor" href="#_1、盒模型" aria-hidden="true">#</a> 1、盒模型</h2><h3 id="_1-1、盒模型组成"><a class="header-anchor" href="#_1-1、盒模型组成" aria-hidden="true">#</a> 1.1、盒模型组成</h3><p>浏览器在布局时，会将每个元素当成一个盒子。盒模型用来描述元素所占用空间的内容,盒模型包括 <code>margin</code>, <code>border</code>, <code>padding</code>, <code>content</code> 四个部分。CSS 中存在两种盒模型</p><ul><li><strong>标准盒模型</strong></li></ul><p>给盒设置 <code>width</code> 和 <code>height</code>，实际设置的是 <code>content box</code>。</p><p>盒子真实 <code>显示大小 = width + padding + border</code></p><ul><li><strong>IE盒模型</strong></li></ul><p>给盒设置 <code>width</code> 和 <code>height</code>，实际设置的是 <code>border box</code>。</p><p>盒子真实 <code>显示大小 = width = content + padding + border</code></p><h3 id="_1-2、如何设置？"><a class="header-anchor" href="#_1-2、如何设置？" aria-hidden="true">#</a> 1.2、如何设置？</h3><p>通过设置 <code>box-sizing</code> 属性值</p><ul><li><code>content-box</code>: 标准盒模型</li><li><code>border-box</code>: IE 盒模型</li><li><code>padding-box</code>: (ps： Firefox 推出过，后被删除)</li></ul><p>推荐使用 <code>border-box</code>, 可避免手动计算各尺寸</p><h2 id="_2、文档流"><a class="header-anchor" href="#_2、文档流" aria-hidden="true">#</a> 2、文档流</h2><p>默认文档流会从上到下，从左到右依次排列布局，可通过 position 属性调整元素的布局方式</p><h3 id="_2-1-position"><a class="header-anchor" href="#_2-1-position" aria-hidden="true">#</a> 2.1 position</h3><ul><li>static</li><li>inherit</li><li>relative</li><li>absolute</li><li>fixed</li><li>sticky</li></ul>',19)];l.render=function(d,o,l,a,r,c){return e(),i("div",null,t)};export{o as __pageData,l as default};
