import{o as n,c as s,d as a}from"./app.f28900b5.js";const p='{"title":"一、new 的实现原理","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、new 的实现原理","slug":"一、new-的实现原理"},{"level":2,"title":"二、JS对象的两类属性","slug":"二、js对象的两类属性"},{"level":3,"title":"2.1 数据属性","slug":"_2-1-数据属性"},{"level":3,"title":"2.2 访问器属性","slug":"_2-2-访问器属性"},{"level":2,"title":"三、实现继承的解决方案","slug":"三、实现继承的解决方案"},{"level":3,"title":"3.1 原型链继承","slug":"_3-1-原型链继承"},{"level":3,"title":"3.2 借用构造函数继承","slug":"_3-2-借用构造函数继承"},{"level":3,"title":"3.3 组合继承","slug":"_3-3-组合继承"},{"level":3,"title":"3.4 原型式继承","slug":"_3-4-原型式继承"},{"level":3,"title":"3.5 寄生式继承","slug":"_3-5-寄生式继承"},{"level":3,"title":"3.6 寄生式组合继承","slug":"_3-6-寄生式组合继承"}],"relativePath":"frontend-graph/JavaScript/2、面向对象和原型.md","lastUpdated":1625321051076}',t={},o=a('',59);t.render=function(a,p,t,e,c,l){return n(),s("div",null,[o])};export default t;export{p as __pageData};
