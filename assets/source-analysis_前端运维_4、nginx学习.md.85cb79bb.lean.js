import{o as n,c as s,a as l,b as a}from"./app.a1522aa7.js";const t='{"title":"一、初识 nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、初识 nginx","slug":"一、初识-nginx"},{"level":3,"title":"1.1、安装","slug":"_1-1、安装"},{"level":3,"title":"1.2、操作","slug":"_1-2、操作"},{"level":3,"title":"1.3、配置文件","slug":"_1-3、配置文件"},{"level":2,"title":"二、nginx 工作流","slug":"二、nginx-工作流"},{"level":2,"title":"三、nginx 实战","slug":"三、nginx-实战"},{"level":3,"title":"3.1、静态资源 web 服务","slug":"_3-1、静态资源-web-服务"},{"level":3,"title":"3.2、浏览器缓存","slug":"_3-2、浏览器缓存"},{"level":3,"title":"3.3、跨域","slug":"_3-3、跨域"},{"level":3,"title":"3.4、代理","slug":"_3-4、代理"},{"level":3,"title":"3.5、负载均衡","slug":"_3-5、负载均衡"},{"level":2,"title":"4、location","slug":"_4、location"},{"level":3,"title":"4.1、正则表达式","slug":"_4-1、正则表达式"},{"level":3,"title":"4.2、语法规则","slug":"_4-2、语法规则"},{"level":3,"title":"4.3、匹配规则","slug":"_4-3、匹配规则"},{"level":2,"title":"5、rewrite","slug":"_5、rewrite"}],"relativePath":"source-analysis/前端运维/4、nginx学习.md","lastUpdated":1630371177555}',e={},o=[l("p",null,[a("学习掌握好 "),l("code",null,"nginx"),a(",")],-1),l("h2",{id:"一、初识-nginx"},[l("a",{class:"header-anchor",href:"#一、初识-nginx","aria-hidden":"true"},"#"),a(" 一、初识 nginx")],-1),l("h3",{id:"_1-1、安装"},[l("a",{class:"header-anchor",href:"#_1-1、安装","aria-hidden":"true"},"#"),a(" 1.1、安装")],-1),l("p",null,"以 centos 为例，通过 yum 进行安装",-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# 安装nginx"),a("\nyum "),l("span",{class:"token function"},"install"),a(" nginx -y\n"),l("span",{class:"token comment"},"# 查看安装的版本"),a("\nnginx -v\n"),l("span",{class:"token comment"},"# 查看编译时的参数"),a("\nnginx -V \n")])])],-1),l("h3",{id:"_1-2、操作"},[l("a",{class:"header-anchor",href:"#_1-2、操作","aria-hidden":"true"},"#"),a(" 1.2、操作")],-1),l("p",null,[l("strong",null,"命令")],-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,[a("systemctl "),l("span",{class:"token punctuation"},"["),a("option"),l("span",{class:"token punctuation"},"]"),a(" nginx.server\n")])])],-1),l("p",null,[l("strong",null,"option")],-1),l("ul",null,[l("li",null,[l("code",null,"start"),a(": 启动")]),l("li",null,[l("code",null,"stop"),a(": 停止")]),l("li",null,[l("code",null,"status"),a(": 状态")]),l("li",null,[l("code",null,"restart"),a(": 重启")]),l("li",null,[l("code",null,"reload"),a(": 重新读取配置")])],-1),l("h3",{id:"_1-3、配置文件"},[l("a",{class:"header-anchor",href:"#_1-3、配置文件","aria-hidden":"true"},"#"),a(" 1.3、配置文件")],-1),l("p",null,[a("上面安装的 nginx 版本为 "),l("code",null,"nginx/1.20.1"),a("，以此为例，nginx 配置文件如下")],-1),l("ul",null,[l("li",null,[l("p",null,[l("code",null,"/etc/nginx/nginx.conf"),a(": 主配置文件")])]),l("li",null,[l("p",null,[l("code",null,"/etc/nginx/conf.d/*.conf"),a(": 包含"),l("code",null,"conf.d"),a("目录下面的所有配置文件")])]),l("li",null,[l("p",null,[l("code",null,"/etc/nginx/default.d/*.conf"),a(": 包含"),l("code",null,"default.d"),a("目录下面的所有配置文件")])])],-1),l("h4",{id:"_1-3-1、nginx配置语法"},[l("a",{class:"header-anchor",href:"#_1-3-1、nginx配置语法","aria-hidden":"true"},"#"),a(" 1.3.1、nginx配置语法")],-1),l("p",null,[a("主配置文件 "),l("code",null,"/etc/nginx/nginx.conf"),a(" 配置如下")],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# 全局配置 "),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"user"),a(" nginx")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# user: 设置nginx服务的系统使用用户"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"worker_processes"),a(" auto")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 工作进程数,一般和CPU数量相同"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"error_log"),a(" /var/log/nginx/error.log")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# nginx的错误日志"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"pid"),a(" /run/nginx.pid")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# nginx服务启动时的pid"),a("\n\n"),l("span",{class:"token comment"},"# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic."),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"include"),a(" /usr/share/nginx/modules/*.conf")]),l("span",{class:"token punctuation"},";"),a("\n\n"),l("span",{class:"token comment"},"# 事件配置 "),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"events")]),a(),l("span",{class:"token punctuation"},"{"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"worker_connections"),a(),l("span",{class:"token number"},"1024")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 每个进程允许的最大连接数 "),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token comment"},"# http 配置"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"http")]),a(),l("span",{class:"token punctuation"},"{"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"log_format"),a("  main  "),l("span",{class:"token string"},[a("'"),l("span",{class:"token variable"},"$remote_addr"),a(" - "),l("span",{class:"token variable"},"$remote_user"),a(" ["),l("span",{class:"token variable"},"$time_local]"),a(' "'),l("span",{class:"token variable"},"$request"),a("\" '")]),a("\n                      "),l("span",{class:"token string"},[a("'"),l("span",{class:"token variable"},"$status"),a(),l("span",{class:"token variable"},"$body_bytes_sent"),a(' "'),l("span",{class:"token variable"},"$http_referer"),a("\" '")]),a("\n                      "),l("span",{class:"token string"},[a("'\""),l("span",{class:"token variable"},"$http_user_agent"),a('" "'),l("span",{class:"token variable"},"$http_x_forwarded_for"),a("\"'")])]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 日志记录格式"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"access_log"),a("  /var/log/nginx/access.log  main")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 默认访问日志"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"sendfile"),a("            "),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a("  "),l("span",{class:"token comment"},"# 启动 sendfile"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"tcp_nopush"),a("          "),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a("  "),l("span",{class:"token comment"},"# tcp_nopush: 懒发送"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"tcp_nodelay"),a("         "),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a("  \n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"keepalive_timeout"),a("   "),l("span",{class:"token number"},"65")]),l("span",{class:"token punctuation"},";"),a("  "),l("span",{class:"token comment"},"# 超时时间"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"types_hash_max_size"),a(),l("span",{class:"token number"},"4096")]),l("span",{class:"token punctuation"},";"),a(" \n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"include"),a("             /etc/nginx/mime.types")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 文件后缀和类型类型的对应关系"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"default_type"),a("        application/octet-stream")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 默认content-type"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"include"),a(" /etc/nginx/conf.d/*.conf")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 包含的子配置文件"),a("\n\n    "),l("span",{class:"token comment"},"# server 配置"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server")]),a(),l("span",{class:"token punctuation"},"{"),a("\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"listen"),a("       "),l("span",{class:"token number"},"80")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 监听端口"),a("\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"listen"),a("       [::]:80")]),l("span",{class:"token punctuation"},";"),a(" \n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server_name"),a("  _")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 用域名方式访问的地址"),a("\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a("         /usr/share/nginx/html")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 静态文件根目录"),a("\n\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" /")]),a(),l("span",{class:"token punctuation"},"{"),a("\n          "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /usr/share/nginx/html")]),l("span",{class:"token punctuation"},";"),a("\n          "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"index"),a(" index.html index.htm")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 首页的索引文件"),a("\n        "),l("span",{class:"token punctuation"},"}"),a("\n\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"error_page"),a(),l("span",{class:"token number"},"404"),a(" /404.html")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 指定错误页面 🙅‍♂️"),a("\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" = /404.html")]),a(),l("span",{class:"token punctuation"},"{"),a("\n        "),l("span",{class:"token punctuation"},"}"),a("\n\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"error_page"),a(),l("span",{class:"token number"},"500"),a(),l("span",{class:"token number"},"502"),a(),l("span",{class:"token number"},"503"),a(),l("span",{class:"token number"},"504"),a(" /50x.html")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 把后台错误重定向到静态的50x.html页面"),a("\n        "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" = /50x.html")]),a(),l("span",{class:"token punctuation"},"{"),a("\n        "),l("span",{class:"token punctuation"},"}"),a("\n    "),l("span",{class:"token punctuation"},"}"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("ul",null,[l("li",null,[a("配置文件由 "),l("strong",null,"指令"),a(" 与 "),l("strong",null,"指令块"),a(" 组成,指令块以"),l("code",null,"{}"),a("将多条指令组织在一起")]),l("li",null,[a("每条指令以 "),l("strong",null,[l("code",null,";"),a("(分号)")]),a(" 结尾，指令与参数之间以空格分隔")]),l("li",null,[l("code",null,"include"),a(" 语句允许把多个配置文件组合起来以提升可维护性")]),l("li",null,[a("一个"),l("code",null,"http"),a("下面可以配置多个 "),l("code",null,"server"),a(", 一个 "),l("code",null,"server"),a(" 下面可以配置多个 "),l("code",null,"location")])],-1),l("h2",{id:"二、nginx-工作流"},[l("a",{class:"header-anchor",href:"#二、nginx-工作流","aria-hidden":"true"},"#"),a(" 二、nginx 工作流")],-1),l("h2",{id:"三、nginx-实战"},[l("a",{class:"header-anchor",href:"#三、nginx-实战","aria-hidden":"true"},"#"),a(" 三、nginx 实战")],-1),l("h3",{id:"_3-1、静态资源-web-服务"},[l("a",{class:"header-anchor",href:"#_3-1、静态资源-web-服务","aria-hidden":"true"},"#"),a(" 3.1、静态资源 web 服务")],-1),l("p",null,[l("strong",null,"静态资源"),a(": 一般客户端发送请求到web服务器，web服务器从"),l("strong",null,"内存"),a("中取到相应的文件，返回给客户端，客户端解析并渲染显示出来")],-1),l("p",null,[l("strong",null,"CDN"),a(": 实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上")],-1),l("p",null,[l("strong",null,"配置选项")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"配置项"),l("th",null,"含义"),l("th",null,"可选值"),l("th",null,"默认值"),l("th",null,"上下文")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"sendfile")])]),l("td",null,"不经过用户内核发送文件"),l("td",null,"on/off"),l("td",null,"off"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"tcp_nopush")])]),l("td",null,[a("在"),l("code",null,"sendfile"),a("开启的情况下，合并多个数据包，提高网络包的传输效率")]),l("td",null,"on/off"),l("td",null,"off"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"tcp_nodelay")])]),l("td",null,[a("在"),l("code",null,"keepalive"),a("连接下，提高网络包的传输实时性")]),l("td",null,"on/off"),l("td",null,"off"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"gzip")])]),l("td",null,"压缩文件可以节约带宽和提高网络传输效率类型"),l("td",null,"on/off"),l("td",null,"off"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"gzip_min_length")])]),l("td",null,"最小压缩文件的大小"),l("td",null,"size"),l("td"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"gzip_comp_level")])]),l("td",null,"压缩级别, 值越高，压缩的体积越小"),l("td",null,"level"),l("td",null,"1"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"gzip_http_version")])]),l("td",null,"压缩版本"),l("td",null,"1.0/1.1"),l("td",null,"1.1"),l("td",null,[l("code",null,"http, server, location, ")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"http_gzip-static_module")])]),l("td",null,[a("先找磁盘上找同名的"),l("code",null,".gz"),a("这个文件是否存在,节约CPU的压缩时间和性能损耗")]),l("td",null,"on/off"),l("td",null,"off"),l("td",null,[l("code",null,"http, server, location, ")])])])],-1),l("p",null,[l("strong",null,"实战")],-1),l("ul",null,[l("li",null,"资源")],-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,[l("span",{class:"token function"},"mkdir"),a(" -p /data/www/images\n"),l("span",{class:"token function"},"mkdir"),a(" -p /data/www/html\n"),l("span",{class:"token builtin class-name"},"echo"),a(" color "),l("span",{class:"token operator"},">"),a(" /data/www/html/color.html\n"),l("span",{class:"token function"},"gzip"),a(" /data/www/html/color.html\n"),l("span",{class:"token function"},"mkdir"),a(" -p /data/www/download\n")])])],-1),l("ul",null,[l("li",null,"配置")],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ .*\\.(jpg|png|gif)$")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip"),a(),l("span",{class:"token boolean"},"off")]),l("span",{class:"token punctuation"},";"),l("span",{class:"token comment"},"#关闭压缩"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /data/www/images")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ .*\\.(html|js|css)$")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_static"),a(),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip"),a(),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#启用压缩"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_min_length"),a(),l("span",{class:"token number"},"1k")]),l("span",{class:"token punctuation"},";"),a("    "),l("span",{class:"token comment"},"#只压缩超过1K的文件"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_http_version"),a(" 1.1")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#启用gzip压缩所需的HTTP最低版本"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_comp_level"),a(),l("span",{class:"token number"},"9")]),l("span",{class:"token punctuation"},";"),a("     "),l("span",{class:"token comment"},"#压缩级别，压缩比率越高文件被压缩的体积越小"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_types"),a("  text/css application/javascript")]),l("span",{class:"token punctuation"},";"),l("span",{class:"token comment"},"#进行压缩的文件类型"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /data/www/html")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/download")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"gzip_static"),a(),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#启用压缩"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"tcp_nopush"),a(),l("span",{class:"token boolean"},"on")]),l("span",{class:"token punctuation"},";"),a("  "),l("span",{class:"token comment"},"# 不要着急发，攒一波再发"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /data/www")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"# 注意此处目录是`/data/www`而不是`/data/www/download`"),a("\n"),l("span",{class:"token punctuation"},"}"),a(" \n")])])],-1),l("h3",{id:"_3-2、浏览器缓存"},[l("a",{class:"header-anchor",href:"#_3-2、浏览器缓存","aria-hidden":"true"},"#"),a(" 3.2、浏览器缓存")],-1),l("p",null,[l("strong",null,"浏览器校验本地缓存流程")],-1),l("p",null,[l("img",{src:"/portal-blog/images/linux/cachecontrol.png",alt:""})],-1),l("p",null,"可设置的响应头",-1),l("ul",null,[l("li",null,"Expires"),l("li",null,"Cache-Control"),l("li",null,"Etag"),l("li",null,"Last-Modified")],-1),l("p",null,[l("strong",null,"设置 Expires")],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ .*\\.(jpg|png|gif)$")]),a(),l("span",{class:"token punctuation"},"{"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"expires"),a(),l("span",{class:"token number"},"24h")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h3",{id:"_3-3、跨域"},[l("a",{class:"header-anchor",href:"#_3-3、跨域","aria-hidden":"true"},"#"),a(" 3.3、跨域")],-1),l("p",null,[a("关于什么是跨域，以及汇总的解决办法，请参考 "),l("a",{href:"https://yangjia23.github.io/portal-blog/frontend-graph/%E6%B5%8F%E8%A7%88%E5%99%A8/4%E3%80%81%E4%B8%80%E6%96%87%E6%B1%87%E6%80%BB9%E7%A7%8D%E8%B7%A8%E5%9F%9F%E6%96%B9%E6%B3%95.html",target:"_blank",rel:"noopener noreferrer"},"一文汇总9种跨域方法"),a("，在 nginx 中解决跨域，需要设置不同的响应头")],-1),l("p",null,[l("strong",null,"语法")],-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,"add_header name value\n")])],-1),l("p",null,[l("strong",null,"客户端")],-1),l("p",null,"在客户端通过 live-server 开启本地服务，向服务端发送请求",-1),l("div",{class:"language-html"},[l("pre",null,[l("code",null,[l("span",{class:"token doctype"},[l("span",{class:"token punctuation"},"<!"),l("span",{class:"token doctype-tag"},"DOCTYPE"),a(),l("span",{class:"token name"},"HTML"),a(),l("span",{class:"token name"},"PUBLIC"),a(),l("span",{class:"token string"},'"-//W3C//DTD HTML 4.0 Transitional//EN"'),l("span",{class:"token punctuation"},">")]),a("\n"),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"<"),a("html")]),l("span",{class:"token punctuation"},">")]),a("\n  "),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"<"),a("head")]),l("span",{class:"token punctuation"},">")]),a("\n  "),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"</"),a("head")]),l("span",{class:"token punctuation"},">")]),a("\n  "),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"<"),a("body")]),l("span",{class:"token punctuation"},">")]),a("\n    "),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"<"),a("script")]),l("span",{class:"token punctuation"},">")]),l("span",{class:"token script"},[l("span",{class:"token language-javascript"},[a("\n      "),l("span",{class:"token keyword"},"let"),a(" xhr "),l("span",{class:"token operator"},"="),a(),l("span",{class:"token keyword"},"new"),a(),l("span",{class:"token class-name"},"XMLHttpRequest"),l("span",{class:"token punctuation"},"("),l("span",{class:"token punctuation"},")"),l("span",{class:"token punctuation"},";"),a("\n        xhr"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"open"),l("span",{class:"token punctuation"},"("),l("span",{class:"token string"},"'GET'"),l("span",{class:"token punctuation"},","),a(),l("span",{class:"token string"},"'http://{ip}/user.json'"),l("span",{class:"token punctuation"},","),a(),l("span",{class:"token boolean"},"true"),l("span",{class:"token punctuation"},")"),l("span",{class:"token punctuation"},";"),a("\n        xhr"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function-variable function"},"onreadystatechange"),a(),l("span",{class:"token operator"},"="),a(),l("span",{class:"token keyword"},"function"),a(),l("span",{class:"token punctuation"},"("),l("span",{class:"token punctuation"},")"),a(),l("span",{class:"token punctuation"},"{"),a("\n            "),l("span",{class:"token keyword"},"if"),a(),l("span",{class:"token punctuation"},"("),a("xhr"),l("span",{class:"token punctuation"},"."),a("readyState "),l("span",{class:"token operator"},"=="),a(),l("span",{class:"token number"},"4"),a(),l("span",{class:"token operator"},"&&"),a(" xhr"),l("span",{class:"token punctuation"},"."),a("status "),l("span",{class:"token operator"},"=="),a(),l("span",{class:"token number"},"200"),l("span",{class:"token punctuation"},")"),a(),l("span",{class:"token punctuation"},"{"),a("\n                console"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"log"),l("span",{class:"token punctuation"},"("),a("xhr"),l("span",{class:"token punctuation"},"."),a("responseText"),l("span",{class:"token punctuation"},")"),l("span",{class:"token punctuation"},";"),a("\n            "),l("span",{class:"token punctuation"},"}"),a("\n        "),l("span",{class:"token punctuation"},"}"),a("\n      xhr"),l("span",{class:"token punctuation"},"."),l("span",{class:"token function"},"send"),l("span",{class:"token punctuation"},"("),l("span",{class:"token punctuation"},")"),l("span",{class:"token punctuation"},";"),a("\n    ")])]),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"</"),a("script")]),l("span",{class:"token punctuation"},">")]),a("\n  "),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"</"),a("body")]),l("span",{class:"token punctuation"},">")]),a("\n"),l("span",{class:"token tag"},[l("span",{class:"token tag"},[l("span",{class:"token punctuation"},"</"),a("html")]),l("span",{class:"token punctuation"},">")]),a("\n")])])],-1),l("p",null,[l("strong",null,"服务端")],-1),l("ul",null,[l("li",null,"静态资源")],-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,[l("span",{class:"token function"},"mkdir"),a(" -p /data/json\n"),l("span",{class:"token builtin class-name"},"cd"),a(" /data/json\n"),l("span",{class:"token function"},"vi"),a(" user.json\n"),l("span",{class:"token punctuation"},"{"),l("span",{class:"token string"},'"name"'),l("span",{class:"token builtin class-name"},":"),l("span",{class:"token string"},'"前端壹甲壹"'),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("ul",null,[l("li",null,"nginx 配置")],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ .*\\.json$")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"add_header"),a(" Access-Control-Allow-Origin http://127.0.0.1:8080")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"add_header"),a(" Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /data/json")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h3",{id:"_3-4、代理"},[l("a",{class:"header-anchor",href:"#_3-4、代理","aria-hidden":"true"},"#"),a(" 3.4、代理")],-1),l("p",null,[a("通过在 "),l("code",null,"server"),a(" 或 "),l("code",null,"location"),a(" 中设置 "),l("code",null,"proxy_pass"),a(" 来实现代理")],-1),l("h4",{id:"_3-4-1、正向代理"},[l("a",{class:"header-anchor",href:"#_3-4-1、正向代理","aria-hidden":"true"},"#"),a(" 3.4.1、正向代理")],-1),l("p",null,"正向代理的对象是客户端,服务器端看不到真正的客户端，例如翻墙使用的VPN",-1),l("h4",{id:"_3-4-2、反向代理"},[l("a",{class:"header-anchor",href:"#_3-4-2、反向代理","aria-hidden":"true"},"#"),a(" 3.4.2、反向代理")],-1),l("p",null,"反向代理的对象的服务端,客户端看不到真正的服务端，例如 nginx 代理的应用服务器",-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/api")]),a(),l("span",{class:"token punctuation"},"{"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_pass"),a(" http://localhost:3000")]),l("span",{class:"token punctuation"},";"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_redirect"),a(" default")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#重定向"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_set_header"),a(" Host "),l("span",{class:"token variable"},"$http_host")]),l("span",{class:"token punctuation"},";"),a("        "),l("span",{class:"token comment"},"#向后传递头信息"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_set_header"),a(" X-Real-IP "),l("span",{class:"token variable"},"$remote_addr")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#把真实IP传给应用服务器"),a("\n\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_connect_timeout"),a(),l("span",{class:"token number"},"30")]),l("span",{class:"token punctuation"},";"),a("  "),l("span",{class:"token comment"},"#默认超时时间"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_send_timeout"),a(),l("span",{class:"token number"},"60")]),l("span",{class:"token punctuation"},";"),a("    "),l("span",{class:"token comment"},"# 发送超时"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_read_timeout"),a(),l("span",{class:"token number"},"60")]),l("span",{class:"token punctuation"},";"),a("    "),l("span",{class:"token comment"},"# 读取超时"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("p",null,[l("strong",null,[l("code",null,"proxy_pass")])],-1),l("ul",null,[l("li",null,[l("code",null,"proxy_pass"),a(" 后的 "),l("code",null,"url"),a(" 最后加上 "),l("code",null,"/"),a(" 就是绝对根路径, "),l("code",null,"location"),a(" 中匹配的路径部分不走代理,也就是说会被替换掉")])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" /a/")]),a(),l("span",{class:"token punctuation"},"{"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_pass"),a(" http://127.0.0.1/b/")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n"),l("span",{class:"token comment"},"# 请求 http://example.com/a/test.html, 会被代理到 http://127.0.0.1/b/test.html"),a("\n")])])],-1),l("ul",null,[l("li",null,[l("code",null,"proxy_pass"),a(" 后的 "),l("code",null,"url"),a(" 最后没有 "),l("code",null,"/"),a(" 就是相对路径，"),l("code",null,"location"),a(" 中匹配的路径部分会走代理,也就是说会保留")])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" /a/")]),a(),l("span",{class:"token punctuation"},"{"),a("\n    "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_pass"),a(" http://127.0.0.1")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n"),l("span",{class:"token comment"},"# 请求 http://example.com/a/test.html, 会被代理到 http://127.0.0.1/a/test.html"),a("\n")])])],-1),l("p",null,[a("(PS: 为了方便记忆和规范配置，建议所有的 "),l("code",null,"proxy_pass"),a(" 后的"),l("code",null,"url"),a("都以"),l("code",null,"/"),a("结尾 )")],-1),l("ul",null,[l("li",null,[a("在"),l("code",null,"proxy_pass"),a("前面用了"),l("code",null,"rewrite"),a("，如下，这种情况下，"),l("code",null,"proxy_pass"),a("是无效的")])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" /getName/")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"rewrite"),a("    /getName/([^/]+) /users?name="),l("span",{class:"token variable"},"$1"),a(" break")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"proxy_pass"),a(" http://127.0.0.1")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h3",{id:"_3-5、负载均衡"},[l("a",{class:"header-anchor",href:"#_3-5、负载均衡","aria-hidden":"true"},"#"),a(" 3.5、负载均衡")],-1),l("p",null,"当网站出行高并发，访问量大时，一台服务器的处理能力、存储空间不足时，应该增加一台服务器去分担网站的访问及存储压力。",-1),l("p",null,"通过负载均衡调度服务器，将所有的访问请求分发到应用服务器集群中的任何一台服务器上，当有更多的访问，就在集群中加入更多的应用服务器",-1),l("h4",{id:"_3-5-1、upstream"},[l("a",{class:"header-anchor",href:"#_3-5-1、upstream","aria-hidden":"true"},"#"),a(" 3.5.1、upstream")],-1),l("p",null,[a("通过 "),l("code",null,"upstream"),a(" 定义一组服务池，nginx 把请求转发到服务池")],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"upstream"),a(" webServer")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:3000")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:4000")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:5000")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h4",{id:"_3-5-2、后端服务器调试状态"},[l("a",{class:"header-anchor",href:"#_3-5-2、后端服务器调试状态","aria-hidden":"true"},"#"),a(" 3.5.2、后端服务器调试状态")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"状态"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"down")])]),l("td",null,"当前服务器不参与负载均衡")]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"backup")])]),l("td",null,"当其它节点都无法使用时的备份服务器")]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"max_fails")])]),l("td",null,"允许请求失败的次数, 到达最大次数就会休眠")]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"fail_timeout")])]),l("td",null,"经过 max_fails 失败后，服务器休眠时间,默认10秒")]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"max_conns")])]),l("td",null,"当前服务器可接收的最大连接数")])])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"upstream"),a(" webServer")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:3000 down")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#不参与负载均衡"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:4000 backup")]),l("span",{class:"token punctuation"},";"),a(),l("span",{class:"token comment"},"#充当备份服务器"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:5000")]),a(),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h4",{id:"_3-5-2、分配方式"},[l("a",{class:"header-anchor",href:"#_3-5-2、分配方式","aria-hidden":"true"},"#"),a(" 3.5.2、分配方式")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"类型"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,"轮询(默认)"),l("td",null,[l("strong",null,"平均主义"),a(", 每个请求按时间顺序逐一分配到不同的后端服务器，当某个服务器down掉，会被自动剔除")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"weight")])]),l("td",null,[l("strong",null,"加权轮询"),a("，通过"),l("code",null,"weight"),a("指定轮询几率，"),l("code",null,"weight"),a("和访问比率成正比")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"ip_hash")])]),l("td",null,[a("每个请求按访问"),l("code",null,"ip"),a("的"),l("code",null,"hash"),a("结果分配, 每个访客固定访问一个后端服务器，可以解决"),l("code",null,"session"),a(" 的问题")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"least_conn")])]),l("td",null,"哪个机器上连接数少就分发给谁")]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"url_hash")])]),l("td",null,[a("按访问的"),l("code",null,"URL"),a("地址来分配 请求，每个"),l("code",null,"URL"),a("都定向到同一个后端服务器上(缓存)。(ps: "),l("em",null,"第三方"),a("）")])]),l("tr",null,[l("td",null,[l("strong",null,[l("code",null,"fair")])]),l("td",null,[a("按后端服务器的响应时间来分配请求，响应时间短的优先分配。（ps: "),l("em",null,"第三方"),a("）")])])])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# weight"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"upstream"),a(" webServer")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:3000 weight=1")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:4000 weight=2")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"server"),a(" 127.0.0.1:5000 weight=4")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# ip_hash"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"upstream"),a(" webServer")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"ip_hash"),a(),l("span",{class:"token comment"},"# [type], type = ip_hash | least_conn | url_hash | fair"),a("\n  server 127.0.0.1:3000")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h2",{id:"_4、location"},[l("a",{class:"header-anchor",href:"#_4、location","aria-hidden":"true"},"#"),a(" 4、location")],-1),l("p",null,[l("code",null,"location"),a(" 会用来匹配 "),l("code",null,"URI"),a("，但会忽略其中的参数")],-1),l("h3",{id:"_4-1、正则表达式"},[l("a",{class:"header-anchor",href:"#_4-1、正则表达式","aria-hidden":"true"},"#"),a(" 4.1、正则表达式")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"类型"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,".")]),l("td",null,"匹配除换行符之外的任意字符")]),l("tr",null,[l("td",null,[l("code",null,"?")]),l("td",null,"重复0次或1次")]),l("tr",null,[l("td",null,[l("code",null,"+")]),l("td",null,"重复1次或更多次")]),l("tr",null,[l("td",null,[l("code",null,"*")]),l("td",null,"重复0次或多次")]),l("tr",null,[l("td",null,[l("code",null,"^")]),l("td",null,"匹配字符串的开始")]),l("tr",null,[l("td",null,[l("code",null,"$")]),l("td",null,"匹配字符串的结束")]),l("tr",null,[l("td",null,[l("code",null,"{n}")]),l("td",null,"重复n次")]),l("tr",null,[l("td",null,[l("code",null,"{n,}")]),l("td",null,"重复n次或更多次")]),l("tr",null,[l("td",null,[l("code",null,"[abc]")]),l("td",null,"匹配单个字符a或者b或者c")]),l("tr",null,[l("td",null,[l("code",null,"a-z")]),l("td",null,"匹配a-z小写字母的任意一个")]),l("tr",null,[l("td",null,[l("code",null,"\\")]),l("td",null,"转义字符")]),l("tr",null,[l("td",null,[l("code",null,"()")]),l("td",null,"分组，用于匹配括号之间的内容，可以通过$1、$2引用")]),l("tr",null,[l("td",null,[l("code",null,"\\w")]),l("td",null,[a("指包含大 小写字母数字和下划线 相当于("),l("code",null,"[0-9a-zA-Z]"),a(")")])])])],-1),l("h3",{id:"_4-2、语法规则"},[l("a",{class:"header-anchor",href:"#_4-2、语法规则","aria-hidden":"true"},"#"),a(" 4.2、语法规则")],-1),l("ul",null,[l("li",null,[a("前缀匹配 "),l("ul",null,[l("li",null,"常规"),l("li",null,[l("code",null,"="),a(", 精确匹配")]),l("li",null,[l("code",null,"^~"),a(", 匹配上后则不再继续进行正则的匹配")])])]),l("li",null,[a("正则表达式 "),l("ul",null,[l("li",null,[l("code",null,"~"),a(", 大小写敏感的正则表达式匹配")]),l("li",null,[l("code",null,"~*"),a(", 忽略大小写敏感的正则表达式匹配")])])]),l("li",null,[a("内部调转 "),l("ul",null,[l("li",null,[a("用于内部跳转的命名 "),l("code",null,"location @xxx")])])])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" [=|~|~*|^~] uri")]),a(),l("span",{class:"token punctuation"},"{"),a("..."),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" @name")]),l("span",{class:"token punctuation"},"{"),a("..."),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("h3",{id:"_4-3、匹配规则"},[l("a",{class:"header-anchor",href:"#_4-3、匹配规则","aria-hidden":"true"},"#"),a(" 4.3、匹配规则")],-1),l("p",null,[l("img",{src:"/portal-blog/images/linux/nginx-location.png",alt:""})],-1),l("ul",null,[l("li",null,"等号类型（=）的优先级最高"),l("li",null,"^~类型表达式的优先级次之"),l("li",null,"反之，则匹配正则表达式类型（~ ~*），如果有多个location的正则能匹配的话，则使用正则表达式最长的那个"),l("li",null,"最后，常规字符串匹配类型按前缀匹配")],-1),l("div",{class:"language-"},[l("pre",null,[l("code",null,"location ~ /T1/$ {\n  return 200 '匹配到第一个正则表达式';\n}\nlocation ~* /T1/(\\w+)$ {\n  return 200 '匹配到最长的正则表达式';\n}\nlocation ^~ /T1/ {\n  return 200 '停止后续的正则表达式匹配';\n}\nlocation  /T1/T2 {\n  return 200 '最长的前缀表达式匹配';\n}\nlocation  /T1 {\n  return 200 '前缀表达式匹配';\n}\nlocation = /T1 {\n  return 200 '精确匹配';\n}\n")])],-1),l("div",{class:"language-"},[l("pre",null,[l("code",null,"/T1     //精确匹配\n/T1/    //停止后续的正则表达式匹配\n/T1/T2  //匹配到最长的正则表达式\n/T1/T2/ //最长的前缀表达式匹配\n/t1/T2  //匹配到最长的正则表达式\n")])],-1),l("h2",{id:"_5、rewrite"},[l("a",{class:"header-anchor",href:"#_5、rewrite","aria-hidden":"true"},"#"),a(" 5、rewrite")],-1),l("p",null,[a("通过 "),l("code",null,"rewrite"),a(" 实现 url 重写及重定向")],-1),l("p",null,[l("strong",null,"语法")],-1),l("div",{class:"language-"},[l("pre",null,[l("code",null,"rewrite regex replacement [flag]\n")])],-1),l("p",null,[l("strong",null,"flag")],-1),l("p",null,"flag: 标识规则对应的类型",-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"类型"),l("th",null,"描述")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"last")]),l("td",null,[a("先匹配自己的location,然后通过"),l("code",null,"rewrite"),a("规则新建一个请求再次请求服务端")])]),l("tr",null,[l("td",null,[l("code",null,"break")]),l("td",null,"先匹配自己的location,然后生命周期会在当前的location结束,不再进行后续的匹配")]),l("tr",null,[l("td",null,[l("code",null,"redirect")]),l("td",null,"返回302昨时重定向,以后还会请求这个服务器")]),l("tr",null,[l("td",null,[l("code",null,"permanent")]),l("td",null,"返回301永久重定向,以后会直接请求永久重定向后的域名")])])],-1),l("div",{class:"language-nginx"},[l("pre",null,[l("code",null,[l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/break")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"rewrite"),a(" ^/break /test break")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"root"),a(" /data/html")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/last")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"rewrite"),a(" ^/last /test last")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" /test")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"default_type"),a(" application/json")]),l("span",{class:"token punctuation"},";"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"return"),a(),l("span",{class:"token number"},"200"),a(),l("span",{class:"token string"},'\'{"code":0,"msg":"success"}\'')]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/redirect")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"rewrite"),a(" ^/redirect http://www.baidu.com redirect")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n"),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"location"),a(" ~ ^/permanent")]),a(),l("span",{class:"token punctuation"},"{"),a("\n  "),l("span",{class:"token directive"},[l("span",{class:"token keyword"},"rewrite"),a(" ^/permanent http://www.baidu.com permanent")]),l("span",{class:"token punctuation"},";"),a("\n"),l("span",{class:"token punctuation"},"}"),a("\n")])])],-1),l("div",{class:"language-shell"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# curl http://localhost/last"),a("\n"),l("span",{class:"token punctuation"},"{"),l("span",{class:"token string"},'"code"'),a(":0,"),l("span",{class:"token string"},'"msg"'),l("span",{class:"token builtin class-name"},":"),l("span",{class:"token string"},'"success"'),l("span",{class:"token punctuation"},"}"),a("\n\n"),l("span",{class:"token comment"},"# curl http://localhost/break"),a("\n"),l("span",{class:"token builtin class-name"},"test"),a(),l("span",{class:"token comment"},"# 并没有继续匹配到 `/test`, 而是直接终止，去 /data/html/ 目录下去匹配 test 目录"),a("\n\n"),l("span",{class:"token comment"},"# curl -vL http://localhost/redirect"),a("\n\n"),l("span",{class:"token comment"},"# curl -vL http://localhost/permanent"),a("\n")])])],-1)];e.render=function(l,a,t,e,c,u){return n(),s("div",null,o)};export{t as __pageData,e as default};
