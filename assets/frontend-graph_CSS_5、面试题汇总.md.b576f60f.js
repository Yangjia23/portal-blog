import{o as l,c as a,d as e}from"./app.793f0f95.js";const s='{"title":"1、如何理解CSS盒模型？","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、如何理解CSS盒模型？","slug":"_1、如何理解css盒模型？"},{"level":2,"title":"2、如何理解 BFC ？","slug":"_2、如何理解-bfc-？"},{"level":3,"title":"2.1、何为 BFC","slug":"_2-1、何为-bfc"},{"level":3,"title":"2.2、如何产生 BFC","slug":"_2-2、如何产生-bfc"},{"level":3,"title":"2.3、BFC 的规则","slug":"_2-3、bfc-的规则"},{"level":3,"title":"2.4、清除浮动 .clearfix 类的实现","slug":"_2-4、清除浮动-clearfix-类的实现"}],"relativePath":"frontend-graph/CSS/5、面试题汇总.md","lastUpdated":1625365301299}',n={},i=e('<h2 id="_1、如何理解css盒模型？"><a class="header-anchor" href="#_1、如何理解css盒模型？" aria-hidden="true">#</a> 1、如何理解CSS盒模型？</h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>答题思路</strong></p><ul><li>盒模型的组成</li><li>类型包括 <code>content-box</code> 和 <code>border-box</code>两种，二者区别</li><li>如何设置？为什么 <code>border-box</code> 优于 <code>content-box</code></li></ul></div><hr><h2 id="_2、如何理解-bfc-？"><a class="header-anchor" href="#_2、如何理解-bfc-？" aria-hidden="true">#</a> 2、如何理解 BFC ？</h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>答题思路</strong></p><ul><li>什么是BFC</li><li>如何产生BFC, 以及 BFC的应用</li><li>口喷清除类 <code>.clearfix</code> 的实现代码</li></ul></div><h3 id="_2-1、何为-bfc"><a class="header-anchor" href="#_2-1、何为-bfc" aria-hidden="true">#</a> 2.1、何为 BFC</h3><p>BFC：块级格式化上下文。</p><p>一块独立的渲染区域，内部元素的渲染不会影响边界以外的元素</p><h3 id="_2-2、如何产生-bfc"><a class="header-anchor" href="#_2-2、如何产生-bfc" aria-hidden="true">#</a> 2.2、如何产生 BFC</h3><ul><li>根元素： html 标签</li><li>浮动元素：float 值为 left 或 right</li><li>overflow值不为 visible: 为 auto、scroll、hidden</li><li>display 值为 <ul><li>inline-block</li><li>table</li><li>table-cell</li><li>inline-table</li><li>flex</li><li>inline-flex</li><li>grid</li><li>inline-grid</li></ul></li><li>绝对定位元素，position 值为 fixed 或 absolute</li></ul><h3 id="_2-3、bfc-的规则"><a class="header-anchor" href="#_2-3、bfc-的规则" aria-hidden="true">#</a> 2.3、BFC 的规则</h3><ul><li>内部的 box 将<strong>独占宽度</strong>，且垂直方向上一个接一个排列</li><li>同一个 BFC 的两个相邻 box 的 margin 会出现 margin <strong>边距折叠</strong>现象</li><li>每个 box 在水平方向上的左边缘与 BFC 的左边缘相对齐，即使存在浮动也是如此</li><li>BFC 区域不会与浮动元素重叠，而是会依次排列</li><li>BFC 区域是一个<strong>独立的渲染容器</strong>，容器内的元素和 BFC 区域外的元素之间不会有任何干扰</li><li>浮动元素的高度也会参与BFC 的高度计算</li></ul><p>BFC 的关键点：<code>边距折叠</code>、<code>清除浮动</code>、<code>自适应多栏布局</code></p><h3 id="_2-4、清除浮动-clearfix-类的实现"><a class="header-anchor" href="#_2-4、清除浮动-clearfix-类的实现" aria-hidden="true">#</a> 2.4、清除浮动 <code>.clearfix</code> 类的实现</h3><div class="language-css"><pre><code><span class="token selector">.clearfix:after</span><span class="token punctuation">{</span>\n  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>\n  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clearfix</span><span class="token punctuation">{</span>\n  *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/*兼容 IE*/</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',15);n.render=function(e,s,n,t,o,c){return l(),a("div",null,[i])};export default n;export{s as __pageData};
