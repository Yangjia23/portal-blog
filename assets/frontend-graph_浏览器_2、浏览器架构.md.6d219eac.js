import{o as l,c as n,a as u,b as e}from"./app.6ecd6baa.js";const r='{"title":"一、进程 VS 线程","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、进程 VS 线程","slug":"一、进程-vs-线程"},{"level":2,"title":"二、单进程浏览器时代","slug":"二、单进程浏览器时代"},{"level":2,"title":"三、多进程浏览器时代","slug":"三、多进程浏览器时代"},{"level":3,"title":"3.1、早期Chrome 架构(08年)","slug":"_3-1、早期chrome-架构-08年"},{"level":3,"title":"3.2、目前Chrome 架构","slug":"_3-2、目前chrome-架构"},{"level":2,"title":"四、未来 Chrome 架构","slug":"四、未来-chrome-架构"}],"relativePath":"frontend-graph/浏览器/2、浏览器架构.md","lastUpdated":1625299236651}',o={},t=u("p",null,"从宏观视角下的探索浏览器架构",-1),s=u("div",{class:"tip custom-block"},[u("p",{class:"custom-block-title"},"TIP"),u("p",null,"问题：仅打开一个 Tab 页面，为什么有 4 个进程？")],-1),a=u("h2",{id:"一、进程-vs-线程"},[u("a",{class:"header-anchor",href:"#一、进程-vs-线程","aria-hidden":"true"},"#"),e(" 一、进程 VS 线程")],-1),c=u("ul",null,[u("li",null,[u("p",null,[u("strong",null,"并行处理"),e("：计算机在同一个时刻处理多个任务使用并行处理能大大提升性能。")])]),u("li",null,[u("p",null,"多线程可以并行处理任务，但线程不能单独存在，需要由进程来启动和管理的。")]),u("li",null,[u("p",null,"线程依附于进程，在进程中可以使用多线程来提供效率")])],-1),i=u("p",null,[u("img",{src:"/images/browser/process-thread.png",alt:"http-cache"})],-1),h=u("p",null,[u("strong",null,"四个特点")],-1),p=u("ul",null,[u("li",null,"1、进程中任意一个线程执行出错，都会导致进程的崩溃"),u("li",null,[e("2、线程之间可以共享进程中的数据 "),u("img",{src:"/images/browser/process-thread-02.png",alt:"http-cache"})]),u("li",null,[e("3、当一个进程关闭之后，操作系统会回收进程所占用的内存（即使线程因操作发生"),u("strong",null,"内存泄漏"),e("，进程退出时，也能正确回收内存）")]),u("li",null,"4、进程之间的内容相互隔离")],-1),d=u("blockquote",null,[u("p",null,[e("扩展: 比线程更小的存在就是"),u("strong",null,"协程"),e("，而协成是运行在线程中更小的单位。"),u("code",null,"async/await"),e(" 就是基于协程实现的")])],-1),g=u("h2",{id:"二、单进程浏览器时代"},[u("a",{class:"header-anchor",href:"#二、单进程浏览器时代","aria-hidden":"true"},"#"),e(" 二、单进程浏览器时代")],-1),m=u("p",null,[u("img",{src:"/images/browser/browser-arch.png",alt:"http-cache"}),u("strong",null,"特点"),e("：浏览器所有的功能模块都运行在同一个进程中 （"),u("code",null,"2007"),e("之前）")],-1),b=u("p",null,[u("strong",null,"存在的问题")],-1),w=u("ul",null,[u("li",null,[u("strong",null,"不稳定")])],-1),v=u("p",null,"早期是通过插件来实现浏览器的高级功能，像视频、音频等，插件的崩溃会导致整个浏览器崩溃",-1),C=u("ul",null,[u("li",null,[u("strong",null,"不流畅")])],-1),S=u("p",null,[e("页面渲染、"),u("code",null,"JS"),e("执行、插件同处一个线程，意味着同一时刻只有一个模块可以执行，若遇到 "),u("code",null,"JS"),e("中的死循环，会导致页面卡死")],-1),f=u("ul",null,[u("li",null,[u("strong",null,"不安全")])],-1),y=u("p",null,[e("插件可以使用 "),u("code",null,"C++"),e(" 语言编写，这样通过插件可以访问操作系统的任意资源，同时脚本也存在恶意代码注入等问题")],-1),P=u("h2",{id:"三、多进程浏览器时代"},[u("a",{class:"header-anchor",href:"#三、多进程浏览器时代","aria-hidden":"true"},"#"),e(" 三、多进程浏览器时代")],-1),k=u("h3",{id:"_3-1、早期chrome-架构-08年"},[u("a",{class:"header-anchor",href:"#_3-1、早期chrome-架构-08年","aria-hidden":"true"},"#"),e(" 3.1、早期Chrome 架构(08年)")],-1),J=u("p",null,[u("img",{src:"/images/browser/browser-arch-02.png",alt:"http-cache"})],-1),_=u("blockquote",null,[u("p",null,[e("进程间通信 "),u("code",null,"Inter Process Communication (IPC)"),e("：进程之间的通信方式")])],-1),T=u("p",null,"如何解决单进程浏览器存在的问题？",-1),j=u("ul",null,[u("li",null,[u("strong",null,"不稳定"),e(" ？")])],-1),U=u("p",null,"每个插件、页面脚本都有单独的进程，一个插件的崩溃不会导致整个浏览器崩溃",-1),V=u("ul",null,[u("li",null,[u("strong",null,"不流畅"),e(" ？")])],-1),q=u("p",null,"JS 脚本的阻塞只会影响当前页面，不会影响所有页面",-1),A=u("ul",null,[u("li",null,[u("strong",null,"不安全"),e(" ？")])],-1),B=u("p",null,[e("采用"),u("strong",null,"沙箱机制"),e("，相当于给进程加上一把锁，沙箱里的程序可以执行，但不能读写操作系统上的任何数据")],-1),G=u("h3",{id:"_3-2、目前chrome-架构"},[u("a",{class:"header-anchor",href:"#_3-2、目前chrome-架构","aria-hidden":"true"},"#"),e(" 3.2、目前Chrome 架构")],-1),I=u("p",null,[u("img",{src:"/images/browser/browser-arch-03.png",alt:"http-cache"})],-1),x=u("p",null,"所以，打开一个Tab页面，有一个浏览器主进程、一个网络进程、一个GPU 进程、一个渲染进程，共4个进程",-1),D=u("blockquote",null,[u("p",null,"扩展问题：虽然是多进程架构，还是会发生单个页面卡死最终崩溃导致所有页面崩溃？")],-1),H=u("p",null,[e("通常是一个页面一个渲染进程，但存在一个 "),u("strong",null,[e("“同一站点("),u("code",null,"same-site"),e(")”")]),e(" 情，具体是指拥有相同的"),u("strong",null,"根域名"),e("、"),u("strong",null,"协议"),e("("),u("code",null,"http://"),e(" 或 "),u("code",null,"https://"),e(" )，包含了该根域名下的所有子域名和不同的端口")],-1),L=u("ul",null,[u("li",null,[u("code",null,"https://www.yangjay.com")]),u("li",null,[u("code",null,"https://blog.yangjay.com")]),u("li",null,[u("code",null,"https://www.yangjay.com:8080")])],-1),M=u("p",null,[e("上面 👆三个就属于同一站点。浏览器规定：当从 "),u("code",null,"A"),e(" 页面新开一个 "),u("code",null,"Tab"),e(" 页，展示同一站点下的 "),u("code",null,"B"),e(" 页面，"),u("code",null,"B"),e(" 页面会复用 "),u("code",null,"A"),e(" 页面的"),u("strong",null,"渲染进程"),e("。官方把这个默认策略叫 "),u("code",null,"process-per-site-instance"),e(", 其优点是 "),u("strong",null,"一个渲染进程里面，各个页面就会共享JS的执行环境")],-1),O=u("ul",null,[u("li",null,[u("strong",null,"浏览器主进程")])],-1),z=u("p",null,"负责界面显示(地址栏、书签、前进和后退按钮)、用户交互、子进程管理，同时提供存储等",-1),E=u("ul",null,[u("li",null,[u("strong",null,"GPU进程")])],-1),F=u("p",null,"初衷是为了实现 CSS 3D 效果，后面网页、界面都采用 GPU 来绘制",-1),K=u("ul",null,[u("li",null,[u("strong",null,"网络进程")])],-1),N=u("p",null,"负责加载页面的网络资源",-1),Q=u("ul",null,[u("li",null,[u("strong",null,"渲染进程")])],-1),R=u("p",null,"负责将HTML、CSS、JS 渲染成可交互使用的网页，同时排版引擎 Blink 和Javascript V8引擎都运行在该进程中",-1),W=u("ul",null,[u("li",null,[u("strong",null,"插件进程"),e(" 负责插件的运行，每个插件都有单独进程")])],-1),X=u("p",null,"目前架构缺点：",-1),Y=u("p",null,"1、占用更多的资源，为了节省内存，Chrome 限制了最大进程数，最大进程数取决于硬件的能力;",-1),Z=u("p",null,"2、更加复杂的体系架构",-1),$=u("h2",{id:"四、未来-chrome-架构"},[u("a",{class:"header-anchor",href:"#四、未来-chrome-架构","aria-hidden":"true"},"#"),e(" 四、未来 Chrome 架构")],-1),ll=u("p",null,"面向服务的架构（SOA），构建一个高内聚、低耦合、易于维护与扩展的系统",-1),nl=u("ul",null,[u("li",null,[u("p",null,"当 Chrome 运行在拥有强大硬件的计算机上时，会将一个服务以多个进程的方式实现，提高稳定性")]),u("li",null,[u("p",null,"当计算机硬件资源紧张时，则可以将多个服务放在一个进程中节省资源")])],-1);o.render=function(u,e,r,o,ul,el){return l(),n("div",null,[t,s,a,c,i,h,p,d,g,m,b,w,v,C,S,f,y,P,k,J,_,T,j,U,V,q,A,B,G,I,x,D,H,L,M,O,z,E,F,K,N,Q,R,W,X,Y,Z,$,ll,nl])};export default o;export{r as __pageData};
